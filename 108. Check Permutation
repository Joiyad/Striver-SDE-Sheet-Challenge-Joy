#include <bits/stdc++.h> 
bool areAnagram(string &str1, string &str2){
    // Brute force: using nested loops
    // T=O(n^2) S=O(1)
    if(str1.size() != str2.size()) return false;

    for(int i=0; i<str1.size(); i++){
        bool flag = false;
        for(int j=0; j<str2.size(); j++){
            if(str1[i] == str2[j]) flag = true;
        }
        if(flag == false) return false;
    }
    return true;

    // Optimized approach: using hashmap
    // T=O(n) S=O(n)
    unordered_map<char, int> umap;
    for(int i=0; i<str1.size(); i++){
        umap[str1[i]]++;
    }

    for(int i=0; i<str2.size(); i++){
        if(umap.find(str2[i]) == umap.end()) return false;
    }

    return true;

    // Approach 3: using sorting
    // T=O(nlogn) S=O(1)
    sort(str1.begin(), str1.end());
    sort(str2.begin(), str2.end());
    if(str1 == str2) return true;
    return false;
}
