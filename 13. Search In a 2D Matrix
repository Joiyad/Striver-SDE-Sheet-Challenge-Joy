bool searchMatrix(vector<vector<int>>& mat, int target) {
    // sorted gives me an hint of applying binary search
    // T=O(m+logn) S=O(1)
    // step 1: edge case
    int m = mat.size();
    int n = mat[0].size();
    if(target<mat[0][0] || target>mat[m-1][n-1]) return false;

    // step 2: find the  row no. in which element will lie
    int rowno = 0;
    for(int i=0; i<m; i++){
        if(target>=mat[i][n-1]) rowno = i;
    }

    // step3: apply binary search
    int low = 0;
    int high = n-1;
    while(low <= high){
        int mid = (low+high)/2;
        if(mat[rowno][mid] == target) return true;
        else if(mat[rowno][mid] > target) high = mid-1;
        else low = mid+1;
    }

    return false;
}
