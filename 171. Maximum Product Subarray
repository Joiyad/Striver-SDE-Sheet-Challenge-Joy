#include <bits/stdc++.h> 

int maximumProduct(vector<int> &arr, int n)
{
	// Brute force: using nested loops
	// T=O(n^2) S=O(1)
	int ans = INT_MIN;
	for(int i=0; i<n; i++){
		int temp = 1;
		for(int j=i; j<n; j++){
			temp *= arr[j];
			ans = max(ans, temp);
		}
	}
	return ans;

	// Optimized approach: using kadane's algorithm
	// T=O(n) S=O(1)
	int product1 = arr[0];
	int product2 = arr[0];
	int ans = arr[0];

	for(int i=1; i<n; i++){
		int x = max({arr[i], product1*arr[i], product2*arr[i]});
		product2 = min({arr[i], product1*arr[i], product2*arr[i]});
		product1 = x;

		ans = max(ans, product1);
	}
	return ans;
}
