#include <bits/stdc++.h>

vector<vector<int>> pairSum(vector<int> &arr, int s){
   // brute force
   // T=O(n^2)+O(nlogn) S=O(1);
   vector<vector<int>> ans;
   sort(arr.begin(), arr.end());
   int n = arr.size();
   for(int i=0; i<n; i++){
      for(int j=i+1; j<n; j++){
         if(arr[i] + arr[j] == s){
            ans.push_back({arr[i], arr[j]});
         }
      }
   }

   return ans;


   // Approach 2: using hashmap
   unordered_map<int, int> umap;
   int n = arr.size();
   vector<vector<int>> ans;

   for(int i=0; i<n; i++){
      int target = s-arr[i];
      if(umap[target]){
         int val = umap[target];
         while(val--){
           ans.push_back({min(arr[i], target), max(arr[i], target)});
         }
      }
      umap[arr[i]]++;
   }

   sort(ans.begin(), ans.end());

   return ans;
}
