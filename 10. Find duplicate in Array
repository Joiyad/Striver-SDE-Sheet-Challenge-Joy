int findDuplicate(vector<int> &arr, int n){
	// brute force, simply sort the array and find the duplicate
	// T=O(nlogn)+O(n) S=O(1);
	sort(arr.begin(), arr.end());
	for(int i=1; i<n; i++){
		if(arr[i] == arr[i-1]) return arr[i-1];
	}
	return -1;

	// another approach: intution is since no. are from 1 to n-1, so we will treat array elments 
	// as index and multiply that index(array element) with -1. If any number repeats that means 
	// the element at that index will be positive and hence we will return that particular index.
	// T=O(n) S=O(1) 
	for(int i=0; i<n; i++){
		arr[abs(arr[i])] *= -1;
		if(arr[abs(arr[i])] > 0) return abs(arr[i]);
	}
	return -1;
}
